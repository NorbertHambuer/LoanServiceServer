// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Client struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Amount               int32    `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	PayDay               int64    `protobuf:"varint,4,opt,name=payDay,proto3" json:"payDay,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Client) Reset()         { *m = Client{} }
func (m *Client) String() string { return proto.CompactTextString(m) }
func (*Client) ProtoMessage()    {}
func (*Client) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *Client) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Client.Unmarshal(m, b)
}
func (m *Client) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Client.Marshal(b, m, deterministic)
}
func (m *Client) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Client.Merge(m, src)
}
func (m *Client) XXX_Size() int {
	return xxx_messageInfo_Client.Size(m)
}
func (m *Client) XXX_DiscardUnknown() {
	xxx_messageInfo_Client.DiscardUnknown(m)
}

var xxx_messageInfo_Client proto.InternalMessageInfo

func (m *Client) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Client) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Client) GetAmount() int32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Client) GetPayDay() int64 {
	if m != nil {
		return m.PayDay
	}
	return 0
}

type UserCredentials struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserCredentials) Reset()         { *m = UserCredentials{} }
func (m *UserCredentials) String() string { return proto.CompactTextString(m) }
func (*UserCredentials) ProtoMessage()    {}
func (*UserCredentials) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *UserCredentials) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserCredentials.Unmarshal(m, b)
}
func (m *UserCredentials) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserCredentials.Marshal(b, m, deterministic)
}
func (m *UserCredentials) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserCredentials.Merge(m, src)
}
func (m *UserCredentials) XXX_Size() int {
	return xxx_messageInfo_UserCredentials.Size(m)
}
func (m *UserCredentials) XXX_DiscardUnknown() {
	xxx_messageInfo_UserCredentials.DiscardUnknown(m)
}

var xxx_messageInfo_UserCredentials proto.InternalMessageInfo

func (m *UserCredentials) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserCredentials) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type UserRegisterCredentials struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	ConfiredPassword     string   `protobuf:"bytes,3,opt,name=confiredPassword,proto3" json:"confiredPassword,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserRegisterCredentials) Reset()         { *m = UserRegisterCredentials{} }
func (m *UserRegisterCredentials) String() string { return proto.CompactTextString(m) }
func (*UserRegisterCredentials) ProtoMessage()    {}
func (*UserRegisterCredentials) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

func (m *UserRegisterCredentials) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRegisterCredentials.Unmarshal(m, b)
}
func (m *UserRegisterCredentials) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRegisterCredentials.Marshal(b, m, deterministic)
}
func (m *UserRegisterCredentials) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRegisterCredentials.Merge(m, src)
}
func (m *UserRegisterCredentials) XXX_Size() int {
	return xxx_messageInfo_UserRegisterCredentials.Size(m)
}
func (m *UserRegisterCredentials) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRegisterCredentials.DiscardUnknown(m)
}

var xxx_messageInfo_UserRegisterCredentials proto.InternalMessageInfo

func (m *UserRegisterCredentials) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserRegisterCredentials) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *UserRegisterCredentials) GetConfiredPassword() string {
	if m != nil {
		return m.ConfiredPassword
	}
	return ""
}

type LoanRequest struct {
	ClientId             int32    `protobuf:"varint,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
	Amount               int32    `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoanRequest) Reset()         { *m = LoanRequest{} }
func (m *LoanRequest) String() string { return proto.CompactTextString(m) }
func (*LoanRequest) ProtoMessage()    {}
func (*LoanRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{3}
}

func (m *LoanRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoanRequest.Unmarshal(m, b)
}
func (m *LoanRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoanRequest.Marshal(b, m, deterministic)
}
func (m *LoanRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoanRequest.Merge(m, src)
}
func (m *LoanRequest) XXX_Size() int {
	return xxx_messageInfo_LoanRequest.Size(m)
}
func (m *LoanRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoanRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoanRequest proto.InternalMessageInfo

func (m *LoanRequest) GetClientId() int32 {
	if m != nil {
		return m.ClientId
	}
	return 0
}

func (m *LoanRequest) GetAmount() int32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type LoanInfo struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Amount               int32    `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	PayDay               int64    `protobuf:"varint,3,opt,name=payDay,proto3" json:"payDay,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoanInfo) Reset()         { *m = LoanInfo{} }
func (m *LoanInfo) String() string { return proto.CompactTextString(m) }
func (*LoanInfo) ProtoMessage()    {}
func (*LoanInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{4}
}

func (m *LoanInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoanInfo.Unmarshal(m, b)
}
func (m *LoanInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoanInfo.Marshal(b, m, deterministic)
}
func (m *LoanInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoanInfo.Merge(m, src)
}
func (m *LoanInfo) XXX_Size() int {
	return xxx_messageInfo_LoanInfo.Size(m)
}
func (m *LoanInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LoanInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LoanInfo proto.InternalMessageInfo

func (m *LoanInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *LoanInfo) GetAmount() int32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *LoanInfo) GetPayDay() int64 {
	if m != nil {
		return m.PayDay
	}
	return 0
}

type OperationMsg struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OperationMsg) Reset()         { *m = OperationMsg{} }
func (m *OperationMsg) String() string { return proto.CompactTextString(m) }
func (*OperationMsg) ProtoMessage()    {}
func (*OperationMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{5}
}

func (m *OperationMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperationMsg.Unmarshal(m, b)
}
func (m *OperationMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperationMsg.Marshal(b, m, deterministic)
}
func (m *OperationMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperationMsg.Merge(m, src)
}
func (m *OperationMsg) XXX_Size() int {
	return xxx_messageInfo_OperationMsg.Size(m)
}
func (m *OperationMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_OperationMsg.DiscardUnknown(m)
}

var xxx_messageInfo_OperationMsg proto.InternalMessageInfo

func (m *OperationMsg) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*Client)(nil), "main.Client")
	proto.RegisterType((*UserCredentials)(nil), "main.UserCredentials")
	proto.RegisterType((*UserRegisterCredentials)(nil), "main.UserRegisterCredentials")
	proto.RegisterType((*LoanRequest)(nil), "main.LoanRequest")
	proto.RegisterType((*LoanInfo)(nil), "main.LoanInfo")
	proto.RegisterType((*OperationMsg)(nil), "main.OperationMsg")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 369 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x92, 0x4f, 0x4f, 0xea, 0x40,
	0x14, 0xc5, 0x69, 0xcb, 0xe3, 0xf1, 0xee, 0x03, 0x84, 0x49, 0xd4, 0x86, 0xc4, 0xa4, 0x99, 0x15,
	0x31, 0x91, 0x85, 0xb0, 0x37, 0x04, 0x37, 0x18, 0x8d, 0xa4, 0xc4, 0x9d, 0x9b, 0xb1, 0x1d, 0xea,
	0x44, 0x3a, 0x53, 0x3b, 0x53, 0x0d, 0x5f, 0xc6, 0xcf, 0x6a, 0xa6, 0x53, 0x4a, 0xf9, 0xe3, 0xca,
	0xdd, 0x9c, 0x9b, 0x73, 0x4f, 0x3b, 0xbf, 0x33, 0xd0, 0x96, 0x34, 0xfd, 0x60, 0x01, 0x1d, 0x26,
	0xa9, 0x50, 0x02, 0xd5, 0x63, 0xc2, 0x38, 0x7e, 0x86, 0xc6, 0x74, 0xc5, 0x28, 0x57, 0xa8, 0x03,
	0x36, 0x0b, 0x5d, 0xcb, 0xb3, 0x06, 0x7f, 0x7c, 0x9b, 0x85, 0x08, 0x41, 0x9d, 0x93, 0x98, 0xba,
	0xb6, 0x67, 0x0d, 0xfe, 0xf9, 0xf9, 0x19, 0x9d, 0x41, 0x83, 0xc4, 0x22, 0xe3, 0xca, 0x75, 0x72,
	0x5f, 0xa1, 0xf4, 0x3c, 0x21, 0xeb, 0x5b, 0xb2, 0x76, 0xeb, 0x9e, 0x35, 0x70, 0xfc, 0x42, 0xe1,
	0x09, 0x9c, 0x3c, 0x49, 0x9a, 0x4e, 0x53, 0x1a, 0x52, 0xae, 0x18, 0x59, 0xc9, 0x32, 0xd6, 0xaa,
	0xc4, 0xf6, 0xa1, 0x99, 0x10, 0x29, 0x3f, 0x45, 0x1a, 0x16, 0x9f, 0x2b, 0x35, 0xce, 0xe0, 0x5c,
	0x47, 0xf8, 0x34, 0x62, 0x52, 0xfd, 0x2a, 0x0a, 0x5d, 0x42, 0x37, 0x10, 0x7c, 0xc9, 0x52, 0x1a,
	0xce, 0x37, 0x1e, 0x27, 0xf7, 0x1c, 0xcc, 0xf1, 0x04, 0xfe, 0xdf, 0x0b, 0xc2, 0x7d, 0xfa, 0x9e,
	0x51, 0xa9, 0x74, 0x6c, 0x90, 0x63, 0x9a, 0x6d, 0x10, 0x95, 0xba, 0x02, 0xc5, 0xae, 0x42, 0xc1,
	0x77, 0xd0, 0xd4, 0x11, 0x33, 0xbe, 0x14, 0x07, 0x70, 0x7f, 0xd8, 0xa9, 0x80, 0x74, 0x76, 0x40,
	0x7a, 0xd0, 0x7a, 0x4c, 0x68, 0x4a, 0x14, 0x13, 0xfc, 0x41, 0x46, 0xa8, 0x0b, 0x4e, 0x2c, 0xa3,
	0xe2, 0xe6, 0xfa, 0x78, 0xfd, 0x65, 0x9b, 0x3f, 0x5e, 0x98, 0x92, 0xd1, 0x58, 0xcb, 0x88, 0xf1,
	0xa2, 0xdd, 0xd3, 0xa1, 0xae, 0x7b, 0xb8, 0xd7, 0x46, 0xbf, 0x65, 0xc6, 0xc6, 0x84, 0x6b, 0xe8,
	0x06, 0x3a, 0x25, 0x69, 0xb3, 0x78, 0xb1, 0x5d, 0x3c, 0xd2, 0xc1, 0x41, 0xc0, 0x18, 0xda, 0x05,
	0xb3, 0x89, 0xb9, 0x51, 0xcf, 0x18, 0x2a, 0x30, 0xfb, 0x9d, 0xed, 0x48, 0xc3, 0xc1, 0x35, 0x34,
	0x82, 0xde, 0xf4, 0x95, 0x06, 0x6f, 0x26, 0x66, 0xa1, 0x88, 0xca, 0x24, 0xda, 0x89, 0x3e, 0xb2,
	0x74, 0x05, 0x7f, 0xe7, 0x64, 0xad, 0x07, 0x7b, 0x56, 0x64, 0x54, 0x15, 0x18, 0xae, 0xbd, 0x34,
	0xf2, 0x67, 0x3f, 0xfa, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xd0, 0xd6, 0x70, 0x53, 0x07, 0x03, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LoanServiceClient is the client API for LoanService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LoanServiceClient interface {
	LoginClient(ctx context.Context, in *UserCredentials, opts ...grpc.CallOption) (*Client, error)
	RegisterClient(ctx context.Context, in *UserRegisterCredentials, opts ...grpc.CallOption) (*Client, error)
	RequestAmount(ctx context.Context, in *LoanRequest, opts ...grpc.CallOption) (*LoanInfo, error)
	CheckClientStatus(ctx context.Context, in *Client, opts ...grpc.CallOption) (*LoanInfo, error)
	PayLoan(ctx context.Context, in *Client, opts ...grpc.CallOption) (*OperationMsg, error)
}

type loanServiceClient struct {
	cc *grpc.ClientConn
}

func NewLoanServiceClient(cc *grpc.ClientConn) LoanServiceClient {
	return &loanServiceClient{cc}
}

func (c *loanServiceClient) LoginClient(ctx context.Context, in *UserCredentials, opts ...grpc.CallOption) (*Client, error) {
	out := new(Client)
	err := c.cc.Invoke(ctx, "/main.LoanService/LoginClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loanServiceClient) RegisterClient(ctx context.Context, in *UserRegisterCredentials, opts ...grpc.CallOption) (*Client, error) {
	out := new(Client)
	err := c.cc.Invoke(ctx, "/main.LoanService/RegisterClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loanServiceClient) RequestAmount(ctx context.Context, in *LoanRequest, opts ...grpc.CallOption) (*LoanInfo, error) {
	out := new(LoanInfo)
	err := c.cc.Invoke(ctx, "/main.LoanService/RequestAmount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loanServiceClient) CheckClientStatus(ctx context.Context, in *Client, opts ...grpc.CallOption) (*LoanInfo, error) {
	out := new(LoanInfo)
	err := c.cc.Invoke(ctx, "/main.LoanService/CheckClientStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loanServiceClient) PayLoan(ctx context.Context, in *Client, opts ...grpc.CallOption) (*OperationMsg, error) {
	out := new(OperationMsg)
	err := c.cc.Invoke(ctx, "/main.LoanService/PayLoan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LoanServiceServer is the server API for LoanService service.
type LoanServiceServer interface {
	LoginClient(context.Context, *UserCredentials) (*Client, error)
	RegisterClient(context.Context, *UserRegisterCredentials) (*Client, error)
	RequestAmount(context.Context, *LoanRequest) (*LoanInfo, error)
	CheckClientStatus(context.Context, *Client) (*LoanInfo, error)
	PayLoan(context.Context, *Client) (*OperationMsg, error)
}

func RegisterLoanServiceServer(s *grpc.Server, srv LoanServiceServer) {
	s.RegisterService(&_LoanService_serviceDesc, srv)
}

func _LoanService_LoginClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserCredentials)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoanServiceServer).LoginClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.LoanService/LoginClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoanServiceServer).LoginClient(ctx, req.(*UserCredentials))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoanService_RegisterClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRegisterCredentials)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoanServiceServer).RegisterClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.LoanService/RegisterClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoanServiceServer).RegisterClient(ctx, req.(*UserRegisterCredentials))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoanService_RequestAmount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoanServiceServer).RequestAmount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.LoanService/RequestAmount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoanServiceServer).RequestAmount(ctx, req.(*LoanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoanService_CheckClientStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Client)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoanServiceServer).CheckClientStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.LoanService/CheckClientStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoanServiceServer).CheckClientStatus(ctx, req.(*Client))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoanService_PayLoan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Client)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoanServiceServer).PayLoan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.LoanService/PayLoan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoanServiceServer).PayLoan(ctx, req.(*Client))
	}
	return interceptor(ctx, in, info, handler)
}

var _LoanService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "main.LoanService",
	HandlerType: (*LoanServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LoginClient",
			Handler:    _LoanService_LoginClient_Handler,
		},
		{
			MethodName: "RegisterClient",
			Handler:    _LoanService_RegisterClient_Handler,
		},
		{
			MethodName: "RequestAmount",
			Handler:    _LoanService_RequestAmount_Handler,
		},
		{
			MethodName: "CheckClientStatus",
			Handler:    _LoanService_CheckClientStatus_Handler,
		},
		{
			MethodName: "PayLoan",
			Handler:    _LoanService_PayLoan_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
